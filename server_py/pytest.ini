[tool:pytest]
# Pytest configuration for Pictallion Python backend testing

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Async support
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Coverage settings
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=app
    --cov-report=term-missing
    --cov-report=html:tests/coverage_html
    --cov-report=xml:tests/coverage.xml
    --cov-branch
    --cov-fail-under=90
    --durations=10
    --maxfail=5

# Markers for different test types
markers =
    unit: Unit tests
    integration: Integration tests
    e2e: End-to-end tests
    slow: Tests that take a long time to run
    database: Tests that require database
    api: API endpoint tests
    service: Service layer tests
    performance: Performance and load tests
    mock: Tests with mocked dependencies
    real: Tests with real external dependencies
    skip_ci: Skip in CI environment
    
# Minimum version requirements
minversion = 7.0

# Test timeouts (in seconds)
timeout = 300
timeout_method = thread

# Warnings
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::pytest.PytestUnraisableExceptionWarning

# Environment variables for testing
env =
    NODE_ENV = test
    DB_TYPE = sqlite
    DATABASE_URL = sqlite:///./test_pictallion.db
    AI_PROVIDER = mock
    OPENAI_API_KEY = test-key
    OLLAMA_BASE_URL = http://localhost:11434